{
  "compilerOptions": {
    /* Basic Options */
    "incremental":true, //增量编译
    "tsBuildInfoFile": "./a", //增量编译文件的存储位置，可以删除文件
    "diagnostics": true, //打印诊断信息
    "target": "es5", // 目标语言的版本
    /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017','ES2018' or 'ESNEXT'. */
    "module": "commonjs", //生成代码的模块标准
    /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */
    // "lib": ["es5","ess2019.array"], // ts 需要引用的类库，即声明文件
    // "allowJs": true,  // 允许编译js文件（js,jsx）
    // "checkJs": true,  // 允许在js文件中报错，通常于allowJs一起使用                     /* Report errors in .js files. */
     "jsx": "react",                     /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */
    // "declaration": true,  // 生成声明文件                 /* Generates corresponding '.d.ts' file. */
    // "declarationMap": true, //生成声明文件的sourceMap            /* Generates a sourcemap for each corresponding '.d.ts' file. */
    // "sourceMap": true,  //生成目标文件的sourceMap                   /* Generates corresponding '.map' file. */
    // "outFile": "./",                       //将多个相互依赖的文件生成一个文件，可以用在amd模块中
    // "outDir": "./", // 指定输出目录                       /* Redirect output structure to the directory. */
    // "rootDir": "./",  //指定输入文件目录，控制输出目录结构                     /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */
    // "composite": true,                     /* Enable project compilation */
    // "removeComments": true, //删除注释               /* Do not emit comments to output. */
    // "noEmit": true, //不输出文件                       /* Do not emit outputs. */
    // "importHelpers": true,                 /* Import emit helpers from 'tslib'. */
    // "downlevelIteration": true,            /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */
    // "isolatedModules": true,               /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */

    /* Strict Type-Checking Options */
    "strict": true, //开启所有严格的类型检查
    /* Enable all strict type-checking options. */
    // "noImplicitAny": false, //不允许隐士的any类型               /* Raise error on expressions and declarations with an implied 'any' type. */
    "strictNullChecks": false, //不允许把null,undefined赋值给其他类型变量
    /* Enable strict null checks. */
    // "strictFunctionTypes": false, //不允许函数参数双向协变          /* Enable strict checking of function types. */
    // "strictBindCallApply": true, //严格的call/apply/bind检查          /* Enable strict 'bind', 'call', and 'apply' methods on functions. */
    // "strictPropertyInitialization": true,//类的实例属性必须初始化  /* Enable strict checking of property initialization in classes. */
    // "noImplicitThis": false,  //不允许this有隐士的any类型              /* Raise error on 'this' expressions with an implied 'any' type. */
    // "alwaysStrict": false,  //在代码中注入 "use strict"                /* Parse in strict mode and emit "use strict" for each source file. */

    /* Additional Checks */
    // "noUnusedLocals": true,                /* Report errors on unused locals. */
    // "noUnusedParameters": true,            /* Report errors on unused parameters. */
    // "noImplicitReturns": true,             /* Report error when not all code paths in function return a value. */
    // "noFallthroughCasesInSwitch": true,    /* Report errors for fallthrough cases in switch statement. */

    /* Module Resolution Options */
    // "moduleResolution": "node",            /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
    // "baseUrl": "./",                       /* Base directory to resolve non-absolute module names. */
    // "paths": {},                           /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
    // "rootDirs": [],                        /* List of root folders whose combined content represents the structure of the project at runtime. */
    // "typeRoots": [],  //声明文件目录，默认是node_modules/@types                     /* List of folders to include type definitions from. */
    // "types": [], //声明文件包                          /* Type declaration files to be included in compilation. */
    // "allowSyntheticDefaultImports": true,  /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
    "esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    // "preserveSymlinks": true,              /* Do not resolve the real path of symlinks. */

    /* Source Map Options */
    // "sourceRoot": "",                      /* Specify the location where debugger should locate TypeScript files instead of source locations. */
    // "mapRoot": "",                         /* Specify the location where debugger should locate map files instead of generated locations. */
    // "inlineSourceMap": true,//生成目标文件的 inline sourceMap               /* Emit a single file with source maps instead of having a separate file. */
    // "inlineSources": true,                 /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */

    /* Experimental Options */
    // "experimentalDecorators": true,        /* Enables experimental support for ES7 decorators. */
    // "emitDecoratorMetadata": true,         /* Enables experimental support for emitting type metadata for decorators. */
    // "emitDeclarationOnly": true ,//只生成声明文件
  }
}